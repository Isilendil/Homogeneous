library(rpart)
library(rattle)
?foreign
??foreign
install.packages('R.matlab')
setwd("~/Workspace/Matlab/OTL_AIJ_code/1. Classification/1. Homogeneous/data")
library(R.matlab)
data <- readMat('books_dvd.mat')
dim(data)
colnames(data)
length(data)
dim(data[[1]])
colnames(data[[1]])
data[[1]]
attr(data)
attr(data,1)
summary(data)
setwd("~/Workspace/R/OnlineTransferLearning/Homogeneous")
names(data)
dim(data$data)
temp <- dim(data$data)
temp
class(temp)
c(n, d) <- dim(data$data)
n
data <- readMat('%s', 'books_dvd.mat')
data <- readMat('%s', 'books_dvd.mat')
data <- readMat('data/%s', 'books_dvd.mat')
getwd()
data <- readMat('data/%s', 'books_dvd')
print('%s', 'testing')
print('testing')
'test' + 'abc'
c('test', 'abc')
paste('test', 'abc')
paste('test', 'abc', sep='')
size
require(R.matlab)
dataMat <- readMat(paste('data', dataset_name, sep = ''))
dataset_name = 'books_dvd.mat'
require(R.matlab)
dataMat <- readMat(paste('data', dataset_name, sep = ''))
dataMat <- readMat(paste('data/', dataset_name, sep = ''))
size <- dim(dataMat$data)
n = size[1]
d = size[2]
n
d
switch
?switch
dataset_name
data$ID_new
names(data)
length(data$ID.new)
length(data$ID.old)
round(1.2)
round(length(dataMat$ID.old)/15)
source('~/Workspace/R/OnlineTransferLearning/Homogeneous/ExperimentOTLKM.R', echo=TRUE)
source('~/Workspace/R/OnlineTransferLearning/Homogeneous/ExperimentOTLKM.R', echo=TRUE)
dataMat <- readMat(paste('data/', datasetName, sep = ''))
datasetName <- 'books_dvd.mat'
dataMat <- readMat(paste('data/', datasetName, sep = ''))
size <- dim(dataMat$data)
n <- size[1]
d <- size[2]
# set parameters
optionsC <- 5
# set parameters: 'sigma' (kernel width) and 'tTick' (step size for plotting figures)
# default: sigma <- 10
optionsSigma <- 4
optionsSigma2 <- 8
optionsTTick <- round(length(dataMat$ID.old)/15)
if (datasetName == 'usenet2')
{
optionsSigma <- 4
optionsSigma2 <- 8
optionsTTick <- 100
}
if (datasetName == 'newsgroup4')
{
optionsSigma <- 4
optionsSigma2 <- 8
optionsTTick <- 100
}
sqrt(4)
log(2)
dataMat$data[,1]
Y <- dataMat$data[, 1]
X <- data[, 2:d]
d
X <- dataMat$data[, 2:d]
dim(x)
dim(X)
dim(Y)
length(Y)
max(X,[],2)
X[1,2:10]
X[1,]
temp <- X[1,]
max(temp)
mean(temp)
temp[4000:20203]
data$description
data$attr
sum(data$data)
mean(data$data)
